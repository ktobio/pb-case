# setup environment for R and script below
install.packages('tidyverse', dependencies = TRUE)
install.packages('Hmisc')
#library('tidyverse')
# this clears R's data memory so new data can be loaded
#clear
rm(list = ls())
# this creates a log file, which will record all of the commands and outputs from this .do file
# log files should be placed in a folder named "logs" in your directory
sink(file = paste0("./logs/pb-case-a_", Sys.Date(),".log"), append = FALSE, type = c("output", "message"), split = TRUE)
# data should be placed in a folder named "data" in your directory
# this pulls in the data in its exact Excel form from HBP
PA_pilgrimA_data <- read.dta13("data/PA_pilgrimA_data.dta")
save("PA_pilgrimA_data", file = "data/PA_pilgrimA_data.Rdata")
getwd()
#install.packages("readstata13")
library("readstata13")
PA_pilgrimA_data <- read.dta13("data/PA_pilgrimA_data.dta")
save("PA_pilgrimA_data", file = "data/PA_pilgrimA_data.Rdata")
load("data/PA_pilgrimA_data.Rdata")
ls()
summary(PA_pilgrimA_data)
str(PA_pilgrimA_dat)
str(PA_pilgrimA_data)
# nicer function from Hmisc to show info
contents(PA_pilgrimA_data)
library('tidyverse')
library('Hmisc')
contents(PA_pilgrimA_data)
summary(PA_pilgrimA_data)
table(PA_pilgrimA_data$ profit_99, PredictTest > 0.5)
table(FraminghamTest$TenYearCHD, PredictTest > 0.5)
table(PA_pilgrimA_data$profit_99)
library("rcompanion")
install.packages("rcompanion")
install.packages("rcompanion")
library("rcompanion")
library('rcompanion')
groupwiseMean(profit_99 ~ 1,
data   = PA_pilgrimA_data,
conf   = 0.95,
digits = 3)
LSmeans(online_99$PA_pilgrimA_data, level=.95)
install.packages("doby")
library("doby")
install.packages("doBy")
library("doBy")
LSmeans(online_99$PA_pilgrimA_data, level=.95)
LSmeans(PA_pilgrimA_data$online_99, level=.95)
load("data/PA_pilgrimA_data.Rdata")
LSmeans(PA_pilgrimA_data, online_99, level=.95)
LSmeans(PA_pilgrimA_data, level=.95)
customer profitability in 1999
LSmeans(PA_pilgrimA_data.online_99, level=.95)
View(PA_pilgrimA_data)
View(PA_pilgrimA_data)
age (mean) customer profitability in 1999
LSmeans(PA_pilgrimA_data$profit_99, level=.95)
LSmeans(PA_pilgrimA_data.profit_99, level=.95)
summary(PA_pilgrimA_data$profit_99)
> std <- function(x) sd(x)/sqrt(length(x))
> std(c(1,2,3,4))
[1] 0.6454972
std <- sd((PA_pilgrimA_data$profit_99)/sqrt(length((PA_pilgrimA_data$profit_99))
std <- sd(PA_pilgrimA_data$profit_99)/sqrt(length(PA_pilgrimA_data$profit_99))
std <- sd(PA_pilgrimA_data$profit_99)/sqrt(31634)
std <- sd(PA_pilgrimA_data$profit_99)/sqrt(length(PA_pilgrimA_data$profit_99))
std <- sd(PA_pilgrimA_data$profit_99)/sqrt(31634)
ttest(PA_pilgrimA_data$profit_99)
t.test(PA_pilgrimA_data$profit_99)
t.test(PA_pilgrimA_data$profit_99, online_99 == 0)
t.test(PA_pilgrimA_data$profit_99)
t.test(PA_pilgrimA_data$profit_99, PA_pilgrimA_data$online_99 == 0)
t.test(PA_pilgrimA_data$profit_99)
t.test(PA_pilgrimA_data$profit_99)
summary(PA_pilgrimA_data$profit_99, PA_pilgrimA_data$online_99 == 0)
summary(PA_pilgrimA_data$profit_99, PA_pilgrimA_data$online_99 == 0)
summary(PA_pilgrimA_data$profit_99, PA_pilgrimA_data$online_99 == 1)
PA_pilgrimA_data.online0 = subset(PA_pilgrimA_data, PA_pilgrimA_data$online_99 == 0 )
summary(PA_pilgrimA_data.online0$profit_99)
summary(PA_pilgrimA_data.online1$profit_99)
PA_pilgrimA_data.online1 = subset(PA_pilgrimA_data, PA_pilgrimA_data$online_99 == 1 )
summary(PA_pilgrimA_data.online0$profit_99)
summary(PA_pilgrimA_data.online1$profit_99)
t.test(PA_pilgrimA_data.online0$profit_99, PA_pilgrimA_data.online1$profit_99 = NULL)
t.test(PA_pilgrimA_data.online0$profit_99, PA_pilgrimA_data.online1$profit_99 = 0)
t.test(PA_pilgrimA_data.online0$profit_99, PA_pilgrimA_data.online1$profit_99 = 0)
t.test(PA_pilgrimA_data.online0$profit_99, PA_pilgrimA_data.online1$profit_99)
Regression = lm(profit_99 ~ online_99)
sum(Regression)
Regression = lm(PA_pilgrimA_data$profit_99 ~ PA_pilgrimA_data$online_99)
sum(Regression)
summary(Regression)
Regression = lm(PA_pilgrimA_data$profit_99 ~ PA_pilgrimA_data$online_99 PA_pilgrimA_data$age_99)
Regression = lm(PA_pilgrimA_data$profit_99 ~ PA_pilgrimA_data$online_99 + PA_pilgrimA_data$age_99)
summary(Regression)
ls()
PA_pilgrimA_data.agemissing = subset(PA_pilgrimA_data, PA_pilgrimA_data$age_99 == . )
PA_pilgrimA_data.agemissing = subset(PA_pilgrimA_data, PA_pilgrimA_data$age_99 == NULL )
summary(PA_pilgrimA_data.agemissing)
PA_pilgrimA_data.agemissing = subset(PA_pilgrimA_data, PA_pilgrimA_data$age_99 == NA )
summarize(PA_pilgrimA_data.agemissing)
summary(PA_pilgrimA_data.agemissing)
View(PA_pilgrimA_data.agemissing)
View(PA_pilgrimA_data.agemissing)
View(PA_pilgrimA_data)
View(PA_pilgrimA_data.agemissing)
View(PA_pilgrimA_data)
PA_pilgrimA_data.agemissing = subset(PA_pilgrimA_data, PA_pilgrimA_data$age_99 == NA )
PA_pilgrimA_data.agemissing = subset(PA_pilgrimA_data, PA_pilgrimA_data$age_99 == "NA" )
View(PA_pilgrimA_data.agemissing)
View(PA_pilgrimA_data.agemissing)
View(PA_pilgrimA_data)
View(PA_pilgrimA_data)
sum(is.na(PA_pilgrimA_data$age_99))
sum(PA_pilgrimA_data$age_99)
sum(na.rm(PA_pilgrimA_data$age_99))
sum(is.na(PA_pilgrimA_data$age_99) = FALSE)
sum(na.omit(PA_pilgrimA_data$age_99))
sum(na.exclude(PA_pilgrimA_data$age_99))
sum(!is.na(PA_pilgrimA_data$age_99))
sum(!is.na(PA_pilgrimA_data$age_99))
dummy <- as.numeric(is.na(age_99)
)
dummy <- as.numeric(is.na(PA_pilgrimA_data$age_99))
View(PA_pilgrimA_data)
View(PA_pilgrimA_data)
dummy <- as.numeric(!is.na(PA_pilgrimA_data$age_99))
age_99_exists <- as.numeric(!is.na(PA_pilgrimA_data$age_99))
#compare the average profitability of customers where age data is and isn't missing
PA_pilgrimA_data.agemissing = subset(PA_pilgrimA_data, PA_pilgrimA_data$age_99_exists == 0 )
PA_pilgrimA_data.agenotmissing = subset(PA_pilgrimA_data, PA_pilgrimA_data$age_99_exists == 1 )
summary(PA_pilgrimA_data.agemissing$profit_99)
summary(PA_pilgrimA_data.agenotmissing$profit_99)
age_99_exists <- as.numeric(!is.na(PA_pilgrimA_data$age_99))
PA_pilgrimA_data.agemissing = subset(PA_pilgrimA_data, age_99_exists == 0 )
summary(PA_pilgrimA_data.agemissing$profit_99)
PA_pilgrimA_data.agemissing = subset(PA_pilgrimA_data, age_99_exists == 0 )
PA_pilgrimA_data.agenotmissing = subset(PA_pilgrimA_data, age_99_exists == 1 )
summary(PA_pilgrimA_data.agemissing$profit_99)
summary(PA_pilgrimA_data.agenotmissing$profit_99)
t.test(PA_pilgrimA_data.agemissing$profit_99, PA_pilgrimA_data.agenotmissing$profit_99)
Regression = lm(PA_pilgrimA_data$profit_99 ~ PA_pilgrimA_data$age_99_exists)
summary(Regression)
Regression2 = lm(PA_pilgrimA_data$profit_99 ~ PA_pilgrimA_data$age_99_exists)
Regression2 = lm(PA_pilgrimA_data$profit_99 ~ age_99_exists)
summary(Regression2)
PA_pilgrimA_data$age_99[is.na(PA_pilgrimA_data$age_99)] <- 0
View(PA_pilgrimA_data)
View(PA_pilgrimA_data)
PA_pilgrimA_data$age_99_zero[is.na(PA_pilgrimA_data$age_99)] <- 0
PA_pilgrimA_data$age_99_zero <- PA_pilgrimA_data$age_99
PA_pilgrimA_data$age_99_zero[is.na(PA_pilgrimA_data$age_99_zero)] <- 0
Regression3 = lm(PA_pilgrimA_data$profit_99 ~ age_99_zero)
summary(Regression3)
Regression3 = lm(PA_pilgrimA_data$profit_99 ~ PA_pilgrimA_data$age_99_zero)
summary(Regression3)
Regression3 = lm(PA_pilgrimA_data$profit_99 ~ PA_pilgrimA_data$online_99 + PA_pilgrimA_data$age_99_zero)
summary(Regression3)
rm(list = ls())
load("data/PA_pilgrimA_data.Rdata")
# base R to show structure of datafram
str(PA_pilgrimA_data)
# nicer function from Hmisc to show info
contents(PA_pilgrimA_data)
# displays summary statistics for all variables
summary(PA_pilgrimA_data)
# WALKING THROUGH THE STATISTICS REVIEW
# PART 1: EXPLORE PROFIT
# calculating the 95% confidence interval for average (mean) customer profitability in 1999
#std <- sd(PA_pilgrimA_data$profit_99)/sqrt(length(PA_pilgrimA_data$profit_99))
summary(PA_pilgrimA_data$profit_99)
t.test(PA_pilgrimA_data$profit_99)
#PART 2: COMPARE PROFITABILITY OF ONLINE AND OFFLINE CUSTOMERS
#the online_99 variable is a dummy variable, which equals 1 if a customer is online and equals 0 if a customer is offline
#the bysort command allows us to compare the average profitability of online and offline customers
#bysort online_99: sum profit_99
#create a subset of only online_99==0
PA_pilgrimA_data.online0 = subset(PA_pilgrimA_data, PA_pilgrimA_data$online_99 == 0 )
#create a subset of only online_99==1
PA_pilgrimA_data.online1 = subset(PA_pilgrimA_data, PA_pilgrimA_data$online_99 == 1 )
summary(PA_pilgrimA_data.online0$profit_99)
summary(PA_pilgrimA_data.online1$profit_99)
#is the difference between the mean profitability for online and offline customers significant?
#we can test this in two ways, a t-test and a regression:
#t-test
#ttest profit_99, by(online_99)
t.test(PA_pilgrimA_data.online0$profit_99, PA_pilgrimA_data.online1$profit_99)
#regression
#regress profit_99 online_99
Regression = lm(PA_pilgrimA_data$profit_99 ~ PA_pilgrimA_data$online_99)
summary(Regression)
#PART 3: MANAGING MISSING DATA
#regression controlling for age
#regress profit_99 online_99 age_99
Regression = lm(PA_pilgrimA_data$profit_99 ~ PA_pilgrimA_data$online_99 + PA_pilgrimA_data$age_99)
summary(Regression)
#when we add age_99 to our regression, we see there are fewer observations in our regression
#it seems that some of our customers are missing age data.
#~= means "not equal", so this command counts the observations where age_99 is not missing
sum(!is.na(PA_pilgrimA_data$age_99))
sum(is.na(PA_pilgrimA_data$age_99))
#Testing for Bias
#generate a new dummy variable that equals 1 if age_99 is not missing, and 0 if age_99 is missing
#generate age_99_Exists=1 if age_99~=.
age_99_exists <- as.numeric(!is.na(PA_pilgrimA_data$age_99))
#compare the average profitability of customers where age data is and isn't missing
PA_pilgrimA_data.agemissing = subset(PA_pilgrimA_data, age_99_exists == 0 )
PA_pilgrimA_data.agenotmissing = subset(PA_pilgrimA_data, age_99_exists == 1 )
summary(PA_pilgrimA_data.agemissing$profit_99)
summary(PA_pilgrimA_data.agenotmissing$profit_99)
#compare the average profitability of customers where age data is and isn't missing
t.test(PA_pilgrimA_data.agemissing$profit_99, PA_pilgrimA_data.agenotmissing$profit_99)
#regression
Regression2 = lm(PA_pilgrimA_data$profit_99 ~ age_99_exists)
summary(Regression2)
#Ways to Manage the Missing Age Data
#we could create a variable just like age_99, except that we subsitute the missing observations with zero
#recode subsubtitutes the missing observations with zero, and generate creates a new variable called age_99_Zero that contains this new information
#the age_99 variable remains unchanged
#recode age_99 (.=0), generate(age_99_Zero)
PA_pilgrimA_data$age_99_zero <- PA_pilgrimA_data$age_99
PA_pilgrimA_data$age_99_zero[is.na(PA_pilgrimA_data$age_99_zero)] <- 0
# try our regression controlling for age, this time using age_99_Zero instead of age_99
Regression3 = lm(PA_pilgrimA_data$profit_99 ~ PA_pilgrimA_data$online_99 + PA_pilgrimA_data$age_99_zero)
summary(Regression3)
PA_pilgrimA_data$age_99_mean <- PA_pilgrimA_data$age_99
PA_pilgrimA_data$age_99_zero[is.na(PA_pilgrimA_data$age_99_zero)] <- mean(PA_pilgrimA_data$age_99)
PA_pilgrimA_data$age_99_zero[is.na(PA_pilgrimA_data$age_99_zero)] <- mean(PA_pilgrimA_data$age_99)
PA_pilgrimA_data$age_99_zero[is.na(PA_pilgrimA_data$age_99_zero)] <- mean(PA_pilgrimA_data$age_99)
PA_pilgrimA_data$age_99_zero[is.na(PA_pilgrimA_data$age_99_zero)] <- mean(PA_pilgrimA_data$age_99)
PA_pilgrimA_data$age_99_zero[is.na(PA_pilgrimA_data$age_99_zero)] <- mean(PA_pilgrimA_data$age_99)
PA_pilgrimA_data$age_99_zero[is.na(PA_pilgrimA_data$age_99_zero)] <- mean(PA_pilgrimA_data$age_99)
PA_pilgrimA_data$age_99_zero[is.na(PA_pilgrimA_data$age_99_zero)] <- mean(PA_pilgrimA_data$age_99)
PA_pilgrimA_data$age_99_zero[is.na(PA_pilgrimA_data$age_99_zero)] <- mean(PA_pilgrimA_data$age_99)
PA_pilgrimA_data$age_99_zero[is.na(PA_pilgrimA_data$age_99_zero)] <- mean(PA_pilgrimA_data$age_99)
PA_pilgrimA_data$age_99_zero[is.na(PA_pilgrimA_data$age_99_zero)] <- mean(PA_pilgrimA_data$age_99)
summary(Regression3)
mean(PA_pilgrimA_data$age_99)
mean(PA_pilgrimA_data$age_99, na.rm=TRUE)
PA_pilgrimA_data$age_99_zero[is.na(PA_pilgrimA_data$age_99_zero)] <- mean(PA_pilgrimA_data$age_99, na.rm=TRUE)
PA_pilgrimA_data$age_99_mean[is.na(PA_pilgrimA_data$age_99_mean)] <- mean(PA_pilgrimA_data$age_99, na.rm=TRUE)
Regression4 = lm(PA_pilgrimA_data$profit_99 ~ PA_pilgrimA_data$online_99 + PA_pilgrimA_data$age_99_avg)
summary(Regression4)
Regression4 = lm(PA_pilgrimA_data$profit_99 ~ PA_pilgrimA_data$online_99 + PA_pilgrimA_data$age_99_mean)
summary(Regression4)
Regression5 = lm(PA_pilgrimA_data$profit_99 ~ PA_pilgrimA_data$online_99 + PA_pilgrimA_data$age_99_mean) + age_99_exists
Regression5 = lm(PA_pilgrimA_data$profit_99 ~ PA_pilgrimA_data$online_99 + PA_pilgrimA_data$age_99_mean) + age_99_exists)
Regression5 = lm(PA_pilgrimA_data$profit_99 ~ PA_pilgrimA_data$online_99 + PA_pilgrimA_data$age_99_mean + age_99_exists)
summary(Regression5)
Regression5 = lm(PA_pilgrimA_data$profit_99 ~ PA_pilgrimA_data$online_99 + PA_pilgrimA_data$age_99_zero + age_99_exists)
summary(Regression5)
Regression6 = lm(PA_pilgrimA_data$profit_99 ~ PA_pilgrimA_data$online_99 + PA_pilgrimA_data$age_99_mean + age_99_exists)
summary(Regression6)
Regression7 = lm(PA_pilgrimA_data$profit_99 ~ PA_pilgrimA_data$income_99)
summary(Regression7)
sum(!is.na(PA_pilgrimA_data$income_99))
sum(is.na(PA_pilgrimA_data$income_99))
income_99_exists <- as.numeric(!is.na(PA_pilgrimA_data$income_99))
PA_pilgrimA_data.incomemissing = subset(PA_pilgrimA_data, income_99_exists == 0 )
PA_pilgrimA_data.incomenotmissing = subset(PA_pilgrimA_data, income_99_exists == 1 )
summary(PA_pilgrimA_data.incomemissing$profit_99)
summary(PA_pilgrimA_data.incomenotmissing$profit_99)
