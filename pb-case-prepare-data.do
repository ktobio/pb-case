/*************************************************************************************************File        : pb-case-prepare-data.do  <--- this should be the exact name of THIS documentAuthor      : Kristina Tobio Created     : 02 Dec 2016Modified    : 19 Jan 2017Description : .do file for preparing data for use in PA_pilgrimA_code.do, PA_pilgrimB_code.do,			  and PA_pilgrimC_code.do.*************************************************************************************************/// these commands prepare your computer for the data and analysis// this finds and closes open log filescapture log close        // this clears Stata's data memory so new data can be loadedclear       // this makes it so you don't have to keep pressing return/enter to scroll through resultsset more off          // this keeps everything visible on a normal monitor or laptop screenset linesize 200    // cd means "change directory"// changes to the current directory cd .// this creates a log file, which will record all of the commands and outputs from this .do file // log files should be placed in a folder named "logs" in your directory log using "logs/pb-case-prepare-data", replace// data should be placed in a folder named "data" in your directory // this pulls in the data in its exact Excel form from HBP// this command reads the data into Stataimport excel using "data/Pilgrim_ABC_Spreadsheet.xls", sheet(Data) firstrow// renaming variables to make them more user friendlyrename ID idrename Profit profit_99rename Online online_99rename Age age_99rename Inc income_99rename Tenure tenure_99rename District district_99rename H profit_00rename I online_00rename Billpay billpay_99rename K billpay_00// labels variableslabel var id "Customer ID"label var profit_99 "Annual Profit, 1999" label var online_99 "Online Usage, 1999"label var age_99 "Age Bucket, 1999"label var income_99 "Income Bucket, 1999"label var tenure_99 "Tenure (years), 1999"label var district_99 "Geographic Region, 1999"label var profit_00 "Annual Profit, 2000"label var online_00 "Online Usage, 2000"label var billpay_99 "Billpay Usage, 1999"label var billpay_00 "Billpay Usage, 2000"// export data into a CSV file that can be easily imported into Stataexport delimited "data/PA_pilgrim_data.csv", replaceexport excel "data/PA_pilgrim_data.xls", replacesave "data/PA_pilgrim_data.dta", replace// create a seperate dataset for Part A of case (and PA_pilgrimA_code.do), which only uses the 1999 (suffix "_99") data and no billpay_99keep id profit_99 online_99 age_99 income_99 tenure_99 district_99export delimited "data/PA_pilgrimA_data.csv", replaceexport excel "data/PA_pilgrimA_data.xls", firstrow(variables) replacesave "data/PA_pilgrimA_data.dta", replace// clear Stata memoryclear// create a seperate dataset for additional data for Part B of case (and PA_pilgrimB_code.do), which adds the 2000 (suffix "_00") data save the billpay variableuse "data/PA_pilgrim_data"keep id profit_00 online_00 profit_99 online_99 age_99 income_99 tenure_99 district_99export delimited "data/PA_pilgrimB_original_data.csv", replaceexport excel "data/PA_pilgrimB_original_data.xls", firstrow(variables) replacesave "data/PA_pilgrimB_original_data.dta", replace// clear Stata memoryclear// create a seperate dataset for additional data for Part C of case (and PA_pilgrimC_code.do), which adds the billpay variablesuse "data/PA_pilgrim_data"keep id billpay_99 billpay_00 profit_00 online_00 profit_99 online_99 age_99 income_99 tenure_99 district_99export delimited "data/PA_pilgrimC_original_data.csv", replaceexport excel "data/PA_pilgrimC_original_data.xls", firstrow(variables) replacesave "data/PA_pilgrimC_original_data.dta", replace// clear Stata memoryclear// merging the three datasets together// Merge together one at a time// "id" is the common variable in all three datasetsuse "data/PA_pilgrimA_data.dta"merge 1:1 id using "data/PA_pilgrimB_original_data.dta"tab _merge// _merge should all equal "3" if it is successfuldrop _mergesave "data/PA_pilgrim_data.dta", replacemerge 1:1 id using "data/PA_pilgrimC_original_data.dta"tab _merge// merge should all equal "3" if it is successfuldrop _mergesave "data/PA_pilgrim_data.dta", replaceclear// Creating datasets for Parts B and C that include variables created in Part A (for Part B) and Part B (for Part C)// Part Buse "data/PA_pilgrimB_original_data.dta"// Creating variables that are created in the PA_pilgrimA_code_TN.do file // generate a new dummy variable that equals 1 if age_99 is not missing, and 0 if age_99 is missinggenerate age_99_Exists=1 if age_99~=.replace age_99_Exists=0 if age_99_Exists==.// recode subsubtitutes the missing observations with zero, and generate creates a new variable called age_99_Zero that contains this new information// the age_99 variable remains unchangedrecode age_99 (.=0), generate(age_99_Zero)// the egen command, along with mean, creates a variable that is equal to the mean of the age_99 variableegen age_99_Avg=mean(age_99)// now, we want to replace age_99_Avg with the actual age values, if they are not missing// if the actual age values are missing, we will keep the average age value// this command below replaces the values of age_99_Avg with the values of age_99 if age_99 is not equal to missingreplace age_99_Avg=age_99 if age_99~=.// generate a new dummy variable that equals 1 if income_99 is not missing, and 0 if income_99 is missing// note we can simply type "g" rather than "generate"g income_99_Exists=1 if income_99~=.replace income_99_Exists=0 if income_99_Exists==.// create a variable just like income_99, except that we subsitute the missing observations with zerorecode income_99 (.=0), generate(income_99_Zero)// create a variable that is equal to the mean of the income_99 variableegen income_99_Avg=mean(income_99)// replace the values of income_99_Avg with the values of income_99 if income_99 is not equal to missingreplace income_99_Avg=income_99 if income_99~=.// save the dataset for Part Bsave "data/PA_pilgrimB_data.dta", replaceclear//Part Cuse "data/PA_pilgrimC_original_data.dta"merge 1:1 id using "data/PA_pilgrimB_data.dta"// create an indicator for customers that were retained// customers that were NOT retained will have missing data for profit_00// == is "equal to", and ~= is "not equal to"g retain=0 if profit_00==.replace retain=1 if profit_00~=.// Creating variables that are created in the PA_pilgrimB_code_TN.do file // Does adding customer profitability from 1999 have an effect on our results?regress retain profit_99 online_99 tenure_99 income_99_Zero age_99_Zero income_99_Exist age_99_Exist i.district_99// Predict customer retention using the above equationpredict retainPredict// Using logistic regression, which may be a better fitlogit retain profit_99 online_99 tenure_99 income_99_Zero age_99_Zero income_99_Exist age_99_Exist i.district_99// Predict customer retention using the logistic equationpredict retainLogit// save the dataset for Part Csave "data/PA_pilgrimC_data.dta", replaceclear// closes your loglog close// drops all data from Stata's memoryclear